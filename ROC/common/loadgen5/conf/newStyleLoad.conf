<engine>
  <!-- this is a basic configuration that will playback a single
       client trace against a specified host and port.

       Pass the following commandline arguments:
         hostname	hostname to target
         port		port to target
         tracefile	the tracefile to load
    -->

  <trace>
   <filename>traces/petstore1.trc</filename>
   <classname>roc.loadgen.http.HttpTrace</classname>
  </trace>
  <trace>
   <filename>traces/petstore2.trc</filename>
   <classname>roc.loadgen.http.HttpTrace</classname>
  </trace>
  <trace>
   <filename>traces/petstore3.trc</filename>
   <classname>roc.loadgen.http.HttpTrace</classname>
  </trace>

  <session>
    <id>http session 1</id>
    <classname>roc.loadgen.http.HttpSession</classname>
    <arg key="servername">localhost</arg>
    <arg key="serverport">8080</arg>
    <arg key="numloops">1</arg>
  </session>
  <session>
    <id>http session 2</id>
    <classname>roc.loadgen.http.HttpSession</classname>
    <arg key="servername">rr5</arg>
    <arg key="serverport">8080</arg>
    <arg key="numloops">1</arg>
  </session>
  <session>
    <id>http proxy test</id>
    <classname>roc.loadgen.http.HttpSession</classname>
    <arg key="servername">localhost</arg>
    <arg key="serverport">8000</arg>
    <arg key="numloops">1</arg>
  </session>

    <!-- interceptors munge or otherwise act on each request.
	 Interceptors are invoked in the order they are listed
	 in the configuration. -->

    <!-- simulate a think-time, pausing slightly between requests -->
    <interceptor> 
      <id>think time</id>
      <classname>roc.loadgen.interceptors.TPCThinkTimeInterceptor</classname>
    </interceptor>

    <!-- if we see an error, retry 3 times before aborting
         the session -->
    <interceptor>
      <id>retry</id>
      <classname>roc.loadgen.interceptors.RetryInterceptor</classname>
      <arg key="numretries">3</arg>
      <arg key="abortsession">true</arg>
    </interceptor>

    <!-- log the request -->
    <interceptor>
      <id>log</id>
      <classname>roc.loadgen.interceptors.LogInterceptor</classname>
	<arg key="debug">true</arg>
    </interceptor>

    <!-- actually do the http request -->
    <interceptor> 
      <id>http request</id>
      <classname>roc.loadgen.http.DoHttpInterceptor</classname>
    </interceptor>
</engine>
