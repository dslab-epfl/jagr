contact: Emre Kiciman, emrek@cs.stanford.edu
last updated Mar 6, 2003

To use the fault injection in the Pinpoint-ified JBoss, you have to do two 
things:

1. write a fault trigger file.  This file specifies what components will 
trigger a fault, and what kind of fault is triggered.  Conceptually, this 
is exactly the same as our fault triggers in the original Pinpoint 
project.  The triggers are stored in an XML file.  Here's an example of 
the format:

        <faults>
          <name>AutoGenerated Config for {name=TheSignOn}</name>
          
          <faultTrigger>
            <faulttype>infinite loop</faulttype>
            <component>
              <attr key="name">TheSignOn</attr>
            </component>
          </faultTrigger>
        </faults>
        
The component attributes are compared to the values of the originInfo 
hashmap (in the observations class), to determine whether a fault should 
be injected.  You can specify multiple attributes, but every attribute in 
the fault trigger's component must be present in the runtime component for 
a fault to be triggered.  Right now, you can't specify multiple 
components to cause a latent/interacting fault to be triggered.  It's 
limited this way because we have to support components interacting across 
separate VMs.  That complicates the tracking of which components have 
been used in a request.

Right now, the only valid fault types are "runtime exception", "expected 
exception", "halt", "null call", and "infinite loop".  These strings are 
case sensitive.
 
You can find a (I believe comprehensive) set of fault files for petstore 
checked into CVS at ROC/path-analysis/pinpoint/scripts/faults/petstore/  
You should find that useful :)


2. You have to tell JBoss where the fault config file is by adding 
"-Droc.pinpoint.injection.FaultTriggerFile=$TRIGGERFILE" to your JAVA_OPTS 
environment variable.  (of course, replace $TRIGGERFILE with the location 
of the fault config file).  If you use the run-*.sh scripts in 
ROC/path-analysis/pinpoint/scripts/ directory, you can just set the 
TRIGGERFILE environment variable and the scripts will handle the rest.


