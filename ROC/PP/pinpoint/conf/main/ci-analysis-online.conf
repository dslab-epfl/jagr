<analysisengine>
  <!--
	This configurations is for online detection of failures,
	using historical analysis of component behavior.  This
        configuration also starts an HTTP front-end for manual
        inspection.


	For this config, cmd-line options that should be passed
	to the analysis are:

	historicaldir=directory of believed good behaviors to load from disk
	outputfile=file to save results in

	e.g.,

        ./run-pinpoint.sh ../conf/main/ci-analysis-online.sh \
                     historicaldir=mygoodbehavior.ci         \
                     outputfile=mycianalysisresults.output
    -->

  <collection name="observations">
    <attribute key="transient">true</attribute>
  </collection>

  <collection name="verifiedtraces">
    <attribute key="transient">true</attribute>
  </collection>

  <collection name="paths">
    <attribute key="transient">true</attribute>
    <attribute key="evictionPolicy">AgeThreshold</attribute>
  </collection>

  <collection name="anomalousComponents">
    <attribute key="evictionPolicy">AgeThreshold</attribute>
  </collection>
  <collection name="mergedAnomalies"/>
  <collection name="filteredAnomalies"/>

  <plugin name="observationCollector">
    <classname>roc.pinpoint.analysis.plugins2.observations.ObservationCollector</classname>
    <arg key="collectionName">observations</arg>
    <arg key="subscriberClassName">roc.pinpoint.tracing.java.TCPFastObservationSubscriber</arg>
  </plugin>

  <subanalysis name="verifyPaths" file="../embed/extract/VerifyRequestTraces.econf">
    <arg key="definingAttributes">name,ipaddress</arg>
    <arg key="online">true</arg>
    <bindrecord key="input">observations</bindrecord>
    <bindrecord key="output">verifiedtraces</bindrecord>
  </subanalysis>

  <plugin name="GeneratePaths">
    <classname>roc.pinpoint.analysis.plugins2.paths.GeneratePaths</classname>
    <arg key="online">$online</arg>
    <arg key="inputCollection">verifiedtraces</arg>
    <arg key="outputCollection">paths</arg>
    <arg key="definingAttributes">name</arg>
  </plugin>

  <plugin name="pathsplitter">
    <classname>roc.pinpoint.analysis.plugins2.paths.SortPathsByRequestType</classname>
    <arg key="inputCollection">paths</arg>
    <arg key="nsOutputCollection">anomalousComponents</arg>
    <arg key="prependName">RequestType</arg>
    <arg key="inputCollectionNSName">paths</arg>
    <arg key="outputCollectionNSName">anomalousComponents</arg>
    <arg key="collectionAttrs">transient=true</arg>
    <arg key="nsArgs">historicaldir=$historicaldir,online=true</arg>
    <arg key="namespaceConfig">../embed/anomalies/hci-anomaly.econf</arg>
    <arg key="online">true</arg>
  </plugin>


  <plugin name="mergeAnomalyResults">
    <classname>roc.pinpoint.analysis.plugins2.ranked.MergeRankedSets</classname>
    <arg key="inputCollection">anomalousComponents</arg>
    <arg key="outputCollection">mergedAnomalies</arg>
    <arg key="online">true</arg>
  </plugin>

  <plugin name="filterAnomalies">
    <classname>roc.pinpoint.analysis.plugins2.ranked.FilterRanked</classname>
    <arg key="inputCollection">mergedAnomalies</arg>
    <arg key="outputCollection">filteredAnomalies</arg>
    <arg key="numCutoff">10</arg>
    <arg key="filterCutoff">1.0</arg>
    <arg key="minTime">60000</arg>
  </plugin>

  <plugin name="jagrreporter">
    <classname>roc.pinpoint.analysis.plugins2.jagr.RecoMgrConnector</classname>
    <arg key="inputCollection">filteredAnomalies</arg>
    <arg key="recoveryManagerHost">localhost</arg>
    <arg key="recoveryManagerPort">2999</arg>
  </plugin>


  <!-- background plugins -->

	<!--
  <plugin name="cleanup">
    <classname>roc.pinpoint.analysis.plugins2.eviction.AgeThreshold</classname>
    <arg key="isDefaultEvictionPolicy">false</arg>
  </plugin>
-->

  <plugin name="httpfe">
    <classname>roc.pinpoint.analysis.plugins2.fe.HttpFrontEnd</classname>
    <arg key="contactName">Emre Kiciman</arg>
    <arg key="contactEmail">emrek@cs.stanford.edu</arg>
    <arg key="online">true</arg>
  </plugin>


</analysisengine>
