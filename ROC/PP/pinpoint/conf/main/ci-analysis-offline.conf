<analysisengine>
  <!--
	This configurations is for offline detection of failures,
	using historical analysis of component behavior.  This
        configuration also starts an HTTP front-end for manual
        inspection.


	For this config, cmd-line options that should be passed
	to the analysis are:

	inputfile=observations to load from disk
	historicaldir=directory of believed good behaviors to load from disk
	outputfile=file to save results in

	e.g.,

        ./run-pinpoint.sh ../conf/main/ci-analysis-offline.sh \
                     inputfile=mydata.observations            \
                     historicaldir=mygoodbehavior.ci         \
                     outputfile=mycianalysisresults.output
    -->


  <collection name="paths">
    <attribute key="transient">true</attribute>
    <attribute key="evictionPolicy">AgeThreshold</attribute>
  </collection>

  <collection name="anomalousComponents">
    <attribute key="evictionPolicy">AgeThreshold</attribute>
  </collection>
  <collection name="finalAnomalousComponents"/>

<subanalysis name="getpaths" file="../embed/extract/LoadPaths.econf">
  <arg key="input">$inputfile</arg>
  <arg key="instanceAttributes">ipaddress,name</arg>
  <arg key="logicalAttributes">name</arg>
  <arg key="online">false</arg>
  <bindrecord key="output">paths</bindrecord>
</subanalysis>

  <plugin name="pathsplitter">
    <classname>roc.pinpoint.analysis.plugins2.paths.SortPathsByRequestType</classname>
    <arg key="inputCollection">paths</arg>
    <arg key="nsOutputCollection">anomalousComponents</arg>
    <arg key="prependName">RequestType</arg>
    <arg key="inputCollectionNSName">paths</arg>
    <arg key="outputCollectionNSName">anomalousComponents</arg>
    <arg key="collectionAttrs">transient=true</arg>
    <arg key="nsArgs">historicaldir=$historicaldir,online=false</arg>
    <arg key="namespaceConfig">../embed/anomalies/hci-anomaly.econf</arg>
    <arg key="online">false</arg>
  </plugin>


  <plugin name="mergeAnomalyResults">
    <classname>roc.pinpoint.analysis.plugins2.ranked.MergeRankedSets</classname>
    <arg key="inputCollection">anomalousComponents</arg>
    <arg key="outputCollection">finalAnomalousComponents</arg>
    <arg key="online">false</arg>
  </plugin>


  <plugin name="saveAnomalies">
    <classname>roc.pinpoint.analysis.plugins2.records.SaveStringRankedComponentBehaviors</classname>
    <arg key="inputCollection">finalAnomalousComponents</arg>
    <!--    <arg key="directory"></arg> -->
    <arg key="baseFilename">$outputfile</arg>
    <arg key="online">false</arg>
  </plugin>


  <!-- background plugins -->

	<!--
  <plugin name="cleanup">
    <classname>roc.pinpoint.analysis.plugins2.eviction.AgeThreshold</classname>
    <arg key="isDefaultEvictionPolicy">false</arg>
  </plugin>
-->

  <plugin name="httpfe">
    <classname>roc.pinpoint.analysis.plugins2.fe.HttpFrontEnd</classname>
    <arg key="contactName">Emre Kiciman</arg>
    <arg key="contactEmail">emrek@cs.stanford.edu</arg>
    <arg key="online">false</arg>
  </plugin>


</analysisengine>
