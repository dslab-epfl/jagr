<analysisengine>
  <!--
	This configuration is for doing a comparison of
	current component behaviors to historical behaviors.

	For this config, cmd-line options that should be passed
	to the analysis are:

	  brainhost=HOSTNAME
		hostname to send FailureReports to.

    -->


  <collection name="observations">
    <attribute key="transient">true</attribute>
  </collection>
  <collection name="observationsWithParsedSQL">
    <attribute key="transient">true</attribute>
  </collection>
  <collection name="detailedObservations">
<!--    <attribute key="evictionPolicy">AgeThreshold</attribute>-->
  </collection>
  <collection name="requestTraces">
<!--    <attribute key="evictionPolicy">AgeThreshold</attribute>-->
  </collection>
  <collection name="verifiedRequestTraces">
    <attribute key="transient">true</attribute>
    <attribute key="evictionPolicy">AgeThreshold</attribute>
  </collection>

  <collection name="anomalousComponents">
<!--    <attribute key="evictionPolicy">AgeThreshold</attribute>-->
  </collection>
  <collection name="mergedAnomalousComponents"/>
  <collection name="filteredAnomalousComponents"/>

  <plugin name="observationCollector">
    <classname>roc.pinpoint.analysis.plugins2.observations.ObservationCollector</classname>
    <arg key="collectionName">observations</arg>
    <arg key="subscriberClassName">roc.pinpoint.tracing.java.TCPObservationSubscriber</arg>
  </plugin>

  <plugin name="sqlparser">
    <classname>roc.pinpoint.analysis.plugins2.observations.sql.SqlParserPlugin</classname>
    <arg key="inputCollection">observations</arg>
    <arg key="outputCollection">observationsWithParsedSQL</arg>
  </plugin>

  <plugin name="MergeDetails">
    <classname>roc.pinpoint.analysis.plugins2.observations.MergeDetails</classname>
    <arg key="inputCollection">observationsWithParsedSQL</arg>
    <arg key="outputCollection">detailedObservations</arg>
  </plugin>

  <plugin name="SortObservationsByRequestId">
    <classname>roc.pinpoint.analysis.plugins2.observations.SortObservations</classname>
    <arg key="inputCollection">detailedObservations</arg>
    <arg key="outputCollection">requestTraces</arg>
  </plugin>

  <plugin name="VerifyTraces">
    <classname>roc.pinpoint.analysis.plugins2.paths.RequestTraceVerifier</classname>
    <arg key="inputCollection">requestTraces</arg>
    <arg key="outputCollection">verifiedRequestTraces</arg>
    <arg key="definingAttributes">ipaddress,name</arg>
  </plugin>

  <plugin name="pathsplitter">
    <classname>roc.pinpoint.analysis.plugins2.paths.SortRequestTracesByType</classname>
    <arg key="inputCollection">verifiedRequestTraces</arg>
    <arg key="nsOutputCollection">anomalousComponents</arg>
    <arg key="prependName">RequestType</arg>
    <arg key="inputCollectionNSName">verifiedRequestTraces</arg>
    <arg key="outputCollectionNSName">anomalousComponents</arg>
    <arg key="collectionAttrs">transient=true</arg>
<!--    <arg key="nsArgs"></arg> -->
    <arg 
key="namespaceConfig">/home/emrek/Projects/swig/ROC/PP/pinpoint/conf/embedded-hbc-anomaly.conf</arg>
  </plugin>


  <plugin name="mergeAnomalyResults">
    <classname>roc.pinpoint.analysis.plugins2.ranked.MergeRankedSets</classname>
    <arg key="inputCollection">anomalousComponents</arg>
    <arg key="outputCollection">mergedAnomalousComponents</arg>
  </plugin>

  <plugin name="filterResults">
    <classname>roc.pinpoint.analysis.plugins2.ranked.FilterRanked</classname>
    <arg key="inputCollection">mergedAnomalousComponents</arg>
    <arg key="outputCollection">filteredAnomalousComponents</arg>
    <arg key="numCutoff">3</arg> <!-- report the 3 highest ranked components -->
    <arg key="filterCutoff">0.1</arg> <!-- filter anything less than 10% 
anomalous -->
  </plugin>

  <plugin name="sendtoBrain">
    <classname>org.jboss.RR.PinpointPluginBrain</classname>
    <arg key="inputCollection">filteredAnomalousComponents</arg>
    <arg key="brainHostname">$brainhost</arg>
    <arg key="brainPort">2374</arg>
  </plugin>



  <!-- background plugins -->

  <plugin name="cleanup">
    <classname>roc.pinpoint.analysis.plugins2.eviction.AgeThreshold</classname>
    <arg key="isDefaultEvictionPolicy">false</arg>
  </plugin>

  <plugin name="httpfe">
    <classname>roc.pinpoint.analysis.plugins2.fe.HttpFrontEnd</classname>
    <arg key="contactName">Emre Kiciman</arg>
    <arg key="contactEmail">emrek@cs.stanford.edu</arg>
  </plugin>


</analysisengine>
